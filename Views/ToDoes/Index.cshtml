@model IEnumerable<WhatToDo.Models.ToDo>
@using WhatToDo.Models;

@{
    ViewData["Title"] = "Index";
}


<div class="text-center">
    <h1 class="display-4">What to Do?</h1>
    <p>Trying to do my fucking first webApp</p>

    <div>
        <ul style="list-style-type: none" class="align-content-center pl-0 ml-0 font-weight-bold">
            <li>
                <label>To Dos </label>
                <input type="text" placeholder="What f** do you have to do today?" class="w-100" />
            </li>
            <li>
                <label>Activity</label>
                <input type="text" placeholder="What that s** related to?" class="w-100" />
            </li>
            <li>
                <label>Duration</label>
                <input type="text" placeholder="How long till y're f***ing done?" class="w-100" />
            </li>
        </ul>

        <p class="btn btn-dark w-100 font-weight-bold"><a asp-action="Create">Add to List</a></p>
    </div>

</div>


<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Duration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.KindOfToDo)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Duration)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.KindOfToDo)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Name">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Name">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Name">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

